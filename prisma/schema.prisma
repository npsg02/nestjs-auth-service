generator client {
  provider = "prisma-client-js"
}

generator dbml {
  provider = "prisma-dbml-generator"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model AuthProvider {
  providerId       String             @id @default(dbgenerated("gen_random_uuid()"))
  name             String
  description      String?
  createAt         DateTime           @default(now())
  AuthProviderUser AuthProviderUser[]
}

model AuthProviderUser {
  id             Int           @id @default(autoincrement())
  AuthProviderId String?
  userId         String?
  createAt       DateTime      @default(now())
  AuthProvider   AuthProvider? @relation(fields: [AuthProviderId], references: [providerId])
  User           User?         @relation(fields: [userId], references: [id])
}

model User {
  id           String             @id @default(dbgenerated("gen_random_uuid()"))
  email        String             @unique
  password     String
  fullName     String?
  address      String?
  avatarFileId Int?
  dateOfBirth  DateTime?
  phone        String?
  bio          String?
  gender       Boolean?
  picture      String?
  Provider     AuthProviderUser[]
  UserRole     UserRole[]

  createdAt DateTime? @default(now())
}

model UserRole {
  id       Int    @id @default(autoincrement())
  userId   String
  roleName String
  Role     Role   @relation(fields: [roleName], references: [name])
  User     User   @relation(fields: [userId], references: [id])

  @@unique([userId, roleName])
}

model Role {
  name           String           @id
  description    String?
  UserRole       UserRole[]
  RolePermission RolePermission[]
}

// Permission model for fine-grained access control (e.g., "read:user", "delete:post")
model Permission {
  name           String           @id
  description    String?
  RolePermission RolePermission[]
}

// Join table to assign permissions to roles (many-to-many)
model RolePermission {
  id             Int        @id @default(autoincrement())
  roleName       String
  permissionName String
  Role           Role       @relation(fields: [roleName], references: [name])
  Permission     Permission @relation(fields: [permissionName], references: [name])

  @@unique([roleName, permissionName])
}
